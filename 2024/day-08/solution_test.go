package main

import (
	"fmt"
	"testing"
)

func TestPart1(t *testing.T) {
	tests := []struct {
		input string
		want  int
	}{
		{
			input: `............
........0...
.....0......
.......0....
....0.......
......A.....
............
............
........A...
.........A..
............
............`,
			want: 14,
		},
		{
			input: `..........
...#......
..........
....a.....
..........
.....a....
..........
......#...
..........
..........`,
			want: 2,
		},
		{
			input: `..........
...#......
#.........
....a.....
........a.
.....a....
..#.......
......#...
..........
..........`,
			want: 4,
		},
	}

	for i, tc := range tests {
		t.Run(fmt.Sprintf("%d", i), func(t *testing.T) {
			got := part1(parseInput(tc.input))

			if got != tc.want {
				t.Errorf("got: %d, want: %d", got, tc.want)
			}
		})
	}
}

func TestComputeAntinodes(t *testing.T) {
	// ..........
	// ...#......
	// ..........
	// ....a.....
	// ..........
	// .....a....
	// ..........
	// ......#...
	// ..........
	// ..........
	p1 := location{3, 4}
	p2 := location{5, 5}
	got1, got2 := computeAntinodes(p1, p2)
	want1, want2 := location{1, 3}, location{7, 6}

	if got1 != want1 {
		t.Errorf("got :%v, want: %v", got1, want1)
	}
	if got2 != want2 {
		t.Errorf("got :%v, want: %v", got2, want2)
	}
}

func TestPart2(t *testing.T) {
	tests := []struct {
		input string
		want  int
	}{
		{
			input: `............
........0...
.....0......
.......0....
....0.......
......A.....
............
............
........A...
.........A..
............
............`,
			want: 34,
		},
		{
			input: `T....#....
...T......
.T....#...
.........#
..#.......
..........
...#......
..........
....#.....
..........`,
			want: 9,
		},
	}

	for i, tc := range tests {
		t.Run(fmt.Sprintf("%d", i), func(t *testing.T) {
			got := part2(parseInput(tc.input))

			if got != tc.want {
				t.Errorf("got: %d, want: %d", got, tc.want)
			}
		})
	}
}
